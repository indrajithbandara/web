/*
 * ChangePasswordDialog.java
 *
 * Created on 01 June 2008, 17:27
 */
package xmppclient;

import javax.swing.JDialog;
import javax.swing.JOptionPane;
import org.jivesoftware.smack.ConnectionConfiguration;
import org.jivesoftware.smack.XMPPConnection;
import org.jivesoftware.smack.XMPPException;

/**
 * A JDialog for changing the password on the server for an XMPP account
 * @author  Lee Boynton (323326)
 */
public class ChangePasswordDialog extends javax.swing.JDialog
{
    private Connection connection;

    /** 
     * Initialises the dialog
     * @param parent The parent JDialog
     * @param modal True if modal, false otherwise
     * @param connection The connection to change the password of
     */
    public ChangePasswordDialog(JDialog parent, boolean modal, Connection connection)
    {
        super(parent, modal);
        this.connection = connection;
        initComponents();
        setLocationRelativeTo(parent);
        this.getRootPane().setDefaultButton(okButton);
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        oldPassword = new javax.swing.JPasswordField();
        newPassword = new javax.swing.JPasswordField();
        retypePassword = new javax.swing.JPasswordField();
        jSeparator1 = new javax.swing.JSeparator();
        okButton = new javax.swing.JButton();
        cancelButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Change Password");

        jLabel1.setText("Old password");

        jLabel2.setText("New password");

        jLabel3.setText("Retype password");

        oldPassword.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                oldPasswordKeyReleased(evt);
            }
        });

        newPassword.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                newPasswordKeyReleased(evt);
            }
        });

        retypePassword.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                retypePasswordKeyReleased(evt);
            }
        });

        okButton.setText("OK");
        okButton.setEnabled(false);
        okButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                okButtonActionPerformed(evt);
            }
        });

        cancelButton.setText("Cancel");
        cancelButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jSeparator1, javax.swing.GroupLayout.DEFAULT_SIZE, 258, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(oldPassword, javax.swing.GroupLayout.DEFAULT_SIZE, 170, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(newPassword, javax.swing.GroupLayout.DEFAULT_SIZE, 170, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(retypePassword, javax.swing.GroupLayout.DEFAULT_SIZE, 170, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(cancelButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 146, Short.MAX_VALUE)
                        .addComponent(okButton)))
                .addContainerGap())
        );

        layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {jLabel1, jLabel2, jLabel3});

        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(oldPassword, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(newPassword, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(retypePassword, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(okButton)
                    .addComponent(cancelButton))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

private void okButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_okButtonActionPerformed
    ConnectionConfiguration config = new ConnectionConfiguration(connection.getHost(), connection.getPortAsInt());
    XMPPConnection xmppConnection = new XMPPConnection(config);
    
    // check the passwords match
    if(!new String(newPassword.getPassword()).equals(new String(retypePassword.getPassword())))
    {
        JOptionPane.showMessageDialog(this, "The passwords do not match", "Passwords do not match", JOptionPane.ERROR_MESSAGE);
        return;
    }
    
    // try to connect to the server
    try
    {
        xmppConnection.connect();
    }
    catch (XMPPException ex)
    {
        JOptionPane.showMessageDialog(this, "Could not connect to server", "Server Unavailable", JOptionPane.ERROR_MESSAGE);
        return;
    }
    
    // try to login with the old password, and don't send presence information
    try
    {//GEN-LAST:event_okButtonActionPerformed
        xmppConnection.login(connection.getUsername(), new String(oldPassword.getPassword()), connection.getResource());
    }
    catch (XMPPException ex)
    {
        JOptionPane.showMessageDialog(this, "Could not authenticate with the given password", "Authentication Failed", JOptionPane.ERROR_MESSAGE);
        return;
    }
    
    // try to change the password
    try
    {
        xmppConnection.getAccountManager().changePassword(new String(newPassword.getPassword()));
    }
    catch (XMPPException ex)
    {
        JOptionPane.showMessageDialog(this, 
                "Could not change the password for this account.\n" +
                "Error received: " + ex.getMessage(), 
                "Could not change password", 
                JOptionPane.ERROR_MESSAGE);
        xmppConnection.disconnect();
        return;
    }
    xmppConnection.disconnect();
    dispose();
}

private void cancelButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelButtonActionPerformed
    dispose();
}//GEN-LAST:event_cancelButtonActionPerformed

private void oldPasswordKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_oldPasswordKeyReleased
    validatePasswords();
}//GEN-LAST:event_oldPasswordKeyReleased

private void newPasswordKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_newPasswordKeyReleased
    validatePasswords();
}//GEN-LAST:event_newPasswordKeyReleased

private void retypePasswordKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_retypePasswordKeyReleased
    validatePasswords();
}//GEN-LAST:event_retypePasswordKeyReleased

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton cancelButton;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JPasswordField newPassword;
    private javax.swing.JButton okButton;
    private javax.swing.JPasswordField oldPassword;
    private javax.swing.JPasswordField retypePassword;
    // End of variables declaration//GEN-END:variables

    private void validatePasswords()
    {
        okButton.setEnabled(false);
        
        // check length
        if(oldPassword.getPassword().length <= 0) return;
        if(newPassword.getPassword().length <= 0) return;
        if(retypePassword.getPassword().length <= 0) return;
        
        // check they match
        if(!new String(newPassword.getPassword()).equals(
                new String(retypePassword.getPassword()))) return;
        
        okButton.setEnabled(true);
    }
}
